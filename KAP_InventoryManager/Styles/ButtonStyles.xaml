<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!-- Menu Button -->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="38"/>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Hover -->
            <Trigger Property="IsMouseOver" Value="True">
                
                <Setter Property="Background" Value="{StaticResource Color3}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>

            <!-- Active -->
            <Trigger Property="IsChecked" Value="True">
                
                <Setter Property="Background" Value="{StaticResource Blue}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- Menu button icon -->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Margin" Value="0,0,16,0"/>
    </Style>

    <!-- Menu button text -->
    <Style x:Key="menuButtontext" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Logout button -->
    <Style x:Key="logoutButton" TargetType="Button">
        <Setter Property="Height" Value="38"/>
        <Setter Property="Background" Value="{StaticResource Color3}"/>
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control Bar Button -->
    <Style x:Key="controlBarButton" TargetType="Button">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Hover -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color3}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Control Bar button icon -->
    <Style x:Key="controlBarButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource Color4}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>
    
    <!-- panel button -->
    <Style x:Key="panelButton" TargetType="RadioButton">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{StaticResource Color3}"/>
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderThickness="0,0,0,0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="5,5,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Active -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource Color2}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- Add button -->
    <Style x:Key="AddButton" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource Blue}"/>
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=CommandParameter}"/>
        
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Border Background="{TemplateBinding Background}" CornerRadius="5"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5"/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                 To="0.98"
                                 Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                 To="0.98"
                                 Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                 To="1"
                                 Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                 To="1"
                                 Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Add button icon -->
    <Style x:Key="AddButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Margin" Value="0,0,6,0"/>
    </Style>

    <!-- Add button text -->
    <Style x:Key="AddButtontext" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Color5}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Discard button -->
    <Style x:Key="DiscardButton" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Color4}"/>
        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=CommandParameter}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Border BorderBrush="{StaticResource Color4}" CornerRadius="5" BorderThickness="1"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5"/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                             To="0.98"
                             Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                             To="0.98"
                             Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                             To="1"
                             Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                             To="1"
                             Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>